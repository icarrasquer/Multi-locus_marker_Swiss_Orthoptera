################################################
#title           : Phylogenetic inference mitogenome COI rDNA
#description     : This script combine all scripts for the phylogenetic inference using (i) mitogenome, (ii) COI barcode and (iii) rDNA. 
#author		     : InÃ©s Carrasquer Puyal
#email	         : ines.carrasquer@unige.ch
#date            : 20.01.2025
################################################

### Mitogenome

for j in Genome_ref1 Genome_ref2
    do

    mkdir ${j}
    cd ${j}

    grep ${j} ../list_sample_mapping | cut -d" " -f1 > temp
    grep  ${j} ../list_sample_mapping_outgroups_updated | cut -d" " -f1 >> temp
    
    for i in $(cat temp)
        do
        ln -s ../${i}_MITO.fasta .
        done

    cat *fasta >> all_seq.fasta
    grep ">" all_seq.fasta | sed -e 's/>//g' > sequences
    cp ../list_genes .
    while read a
        do
        #Get sequences
        grep ${a} sequences > temp_seq
        fastaselect.pl all_seq.fasta temp_seq > locus_${a}.fasta
        #Align
        mafft  --auto --reorder --adjustdirection locus_${a}.fasta > locus_${a}_align.fasta
        #Homogenise mising values
        sed -e '/^>/!s/N/-/g' -e '/^>/!s/n/-/g' -e '/^>/!s/?/-/g' locus_${a}_align.fasta > temp_trim.fasta
        #Clean
        trimal -in temp_trim.fasta -out temp_trim2.fasta  -noallgaps  
        trimal -in temp_trim2.fasta -out locus_${a}_align_trimal.fasta -gt 0.6 -gw 5 # gt:  1 - (fraction of sequences with a gap allowed) gw: Window size only applies to statistics/methods based on Gaps.
        rm temp_trim*
        done < list_genes

    cd ..
    done

#Add information 

for i in $(ls *_trimal.fasta)
    do
    sed -i "s/_R_//g" ${i}
    grep ">" ${i} | cut -d">" -f2 | cut -d "-" -f1,2 > temp_samples

    while read a
        do
        sp=$(grep -a ${a} /data/work/Ortho_SwissBol/Samples/Final_dataset/All_samples_metadata.txt | cut -f12| sort | uniq)
        biogeo=$(grep -a ${a} /data/work/Ortho_SwissBol/Samples/Final_dataset/All_samples_metadata.txt | cut -f15| sort | uniq)
        sed -i "s/>${a}.*/>${a}-${sp}-${biogeo}/g" ${i}
        done < temp_samples
    done

#Remove sequences with more than 40% of N
source activate /home/ines/envseqtk

for i in $(ls *_trimal.fasta)
    do
    name=$(echo ${i} | sed -e 's/.fasta//g')
    seqtk comp ${i} | awk '{print $1"\t"$9/$2}' | awk '{if ($2 < 0.4) print $1}' > temp_list_keep
    fastaselect.pl ${i} temp_list_keep > ${name}_N60.fasta
    rm temp_list_keep
    done

conda deactivate

#Paralog cleaning with Orthoskim
#Give the compatible name for Orthoskim
for i in $(ls locus_*N60.fasta)
    do 
    locus=$(echo ${i} | sed -e 's/.fasta//g')
    grep -Ff <(grep ">" ${i} | cut -d">" -f2) corresp_samplesnames_orthoskim > temp_corresp
    corresp_fab.pl temp_corresp ${i} > ${locus}_orthoskim.fasta
    done

mkdir align
PWD_BASE=${PWD}
cd align
mv ../*orthoskim.fasta .
cd ${PWD_BASE}./script_paralogs_orthoskim.sh

#Paralog cleaning with Orthoskim
python3.5 ORTHOSKIM-v.1.6/src/FilterParalog.py \
    -i ${PWD}/align \
    -o ${PWD}/out_genus \
    -e fasta -q genus -w 100 -p 20

#Come bask to my name from compatible name for Orthoskim
for i in $(ls ${PWD}/out_genus)
    do 
    locus=$(echo ${i} | sed -e 's/.fa//g')
    grep -Ff <(grep ">" ${PWD}/out_genus/${i} | cut -d">" -f2) corresp_samplesnames_orthoskim  | awk '{print $2"\t"$1}' > temp_corresp
    corresp_fab.pl temp_corresp ${PWD}/out_genus/${i} > ${locus}_orthoskimclean.fasta
    done


#Remove samples with more than 80% of N

AMAS.py concat -i *_orthoskimclean.fasta -f fasta -d dna
seqtk comp concatenated.out | awk '{print $1"\t"$9/$2*100}' | cut -d"." -f1 > temp_comp
awk '$2 < 80 {print ">"$1"\t>"$1"-"$2}' temp_comp > list_corresp
cut -f 1 list_corresp > list_corresp1

for i in $(ls *_orthoskimclean.fasta)
    do

    locus=$(echo ${i} | sed  -e 's/.fasta//g')
    grep ">" ${i} | grep -Ff list_corresp1  | cut -d ">" -f2 > temp_samples
    fastaselect.pl ${i} temp_samples > temp_locus
    grep -Ff temp_samples list_corresp > temp_corresp
    corresp_fab.pl temp_corresp temp_locus > ${locus}_N80.fasta

    done


#Launch phylogeny
AMAS.py concat -i *N80.fasta -f fasta -d dna -e

grep ${j} /data/work/Ortho_SwissBol/Samples/Final_dataset/Genomes/PHYLOGENIES_cov3/list_sample_remove | cut -f1 -d " " > temp
grep ">" concatenated.out | cut -d ">" -f2 >temp1
grep -Fvf temp temp1 > temp3

fastaselect.pl concatenated.out temp3 > contatenated_good_samples.out
mv contatenated_good_samples.out concatenated.out

#Prep data: fasta to Phylip
perl /home/ines/bin/fasta2relaxedPhylip.pl -f concatenated.out -o concatenated.phylip

#Partition finder
#Prep data
mkdir FOLDER
echo "## ALIGNMENT FILE ##
alignment = concatenated.phylip;

## BRANCHLENGTHS: linked | unlinked ##
branchlengths = linked;

## MODELS OF EVOLUTION: all | allx | mrbayes | beast | gamma | gammai | <list> ##
models = GTR, GTR+G, GTR+I+G;

# MODEL SELECCTION: AIC | AICc | BIC #
model_selection = aicc;

## DATA BLOCKS: see manual for how to define ##
[data_blocks]" > FOLDER/partition_finder.cfg

cat partitions.txt | tr '\n' '+' | sed -e 's/+/;+/g'| tr '+' '\n' >> FOLDER/partition_finder.cfg

echo "## SCHEMES, search: all | user | greedy | rcluster | rclusterf | kmeans##
[schemes]
search = rcluster;" >> FOLDER/partition_finder.cfg

cp concatenated.phylip FOLDER/

#Run
PartitionFinder.py -p 6 -r FOLDER/

#Model finder
#Prep
sed -n '/nexus/,/end/p' FOLDER/analysis/best_scheme.txt | grep -v PartitionFinder > partitionfinder_best_scheme_partitions.nex
#Run
iqtree -s concatenated.phylip -m MFP -spp partitionfinder_best_scheme_partitions.nex -safe --redo

#Phylogeny inference
iqtree2 -nt 2 -s concatenated.phylip -spp partitionfinder_best_scheme_partitions.nex.best_scheme.nex -B 1000 -bnni -alrt 1000  -safe --prefix concatenated_output --redo-tree



### CO1 barcode 

#Align
source activate /home/jeremy/local/envmafft/
mafft  --auto --reorder --adjustdirection locus_mito_COI_barcode.fasta > locus_mito_COI_barcode_align.fasta
conda deactivate 
#Homogenise mising values
sed -e '/^>/!s/N/-/g' -e '/^>/!s/n/-/g' -e '/^>/!s/?/-/g' locus_mito_COI_barcode_align.fasta > temp_trim.fasta
#Clean
source activate /home/ines/envtrimal
trimal -in temp_trim.fasta -out temp_trim2.fasta  -noallgaps  
trimal -in temp_trim2.fasta -out locus_mito_COI_barcode_align_trimal.fasta -gt 0.6 -gw 5 # gt:  1 - (fraction of sequences with a gap allowed) gw: Window size only applies to statistics/methods based on Gaps.
rm temp_trim*
conda deactivate 

#Add information 
for i in $(ls locus_mito_COI_barcode_align_trimal.fasta)
    do
    sed -i "s/_R_//g" ${i}
    grep ">" ${i} | cut -d">" -f2 | cut -d "-" -f1,2 > temp_samples

    while read a
        do
        sp=$(grep -a ${a} /data/work/Ortho_SwissBol/Samples/Final_dataset/All_samples_metadata.txt | cut -f12| sort | uniq)
        biogeo=$(grep -a ${a} /data/work/Ortho_SwissBol/Samples/Final_dataset/All_samples_metadata.txt | cut -f15| sort | uniq)
        sed -i "s/>${a}.*/>${a}-${sp}-${biogeo}/g" ${i}
        done < temp_samples
    done

#Remove sequences with more than 40% of N
for i in $(ls locus_mito_COI_barcode_align_trimal.fasta)
    do
    name=$(echo ${i} | sed -e 's/.fasta//g')
    seqtk comp ${i} | awk '{print $1"\t"$9/$2}' | awk '{if ($2 < 0.4) print $1}' > temp_list_keep
    fastaselect.pl ${i} temp_list_keep > ${name}_N60.fasta
    rm temp_list_keep
    done

#Paralog cleaning with Orthoskim
#Give the compatible name for Orthoskim
for i in $(ls locus_*N60.fasta)
    do 
    locus=$(echo ${i} | sed -e 's/.fasta//g')
    grep -Ff <(grep ">" ${i} | cut -d">" -f2) corresp_samplesnames_orthoskim > temp_corresp
    corresp_fab.pl temp_corresp ${i} > ${locus}_orthoskim.fasta
    done

mkdir align
PWD_BASE=${PWD}
cd align
mv ../*orthoskim.fasta .
cd ${PWD_BASE}./script_paralogs_orthoskim.sh

#Paralog cleaning with Orthoskim
python3.5 ORTHOSKIM-v.1.6/src/FilterParalog.py \
    -i ${PWD}/align \
    -o ${PWD}/out_genus \
    -e fasta -q genus -w 100 -p 20

#Come bask to my name from compatible name for Orthoskim
for i in $(ls ${PWD}/out_genus)
    do 
    locus=$(echo ${i} | sed -e 's/.fa//g')
    grep -Ff <(grep ">" ${PWD}/out_genus/${i} | cut -d">" -f2) corresp_samplesnames_orthoskim  | awk '{print $2"\t"$1}' > temp_corresp
    corresp_fab.pl temp_corresp ${PWD}/out_genus/${i} > ${locus}_orthoskimclean.fasta
    done

#Remove samples with more than 80% of N

seqtk comp locus_mito_COI_barcode_align_trimal_N60_orthoskim_orthoskimclean.fasta | awk '{print $1"\t"$9/$2*100}' | cut -d"." -f1 > temp_comp
awk '$2 < 80 {print ">"$1"\t>"$1"-"$2}' temp_comp > list_corresp
cut -f 1 list_corresp > list_corresp1

for i in $(ls locus_mito_COI_barcode_align_trimal_N60_orthoskim_orthoskimclean.fasta)
    do

    locus=$(echo ${i} | sed  -e 's/.fasta//g')
    grep ">" ${i} | grep -Ff list_corresp1  | cut -d ">" -f2 > temp_samples
    fastaselect.pl ${i} temp_samples > temp_locus
    grep -Ff temp_samples list_corresp > temp_corresp
    corresp_fab.pl temp_corresp temp_locus > ${locus}_N80.fasta

    done

#Launch phylogeny
perl fasta2relaxedPhylip.pl -f locus_mito_COI_barcode_align_trimal_N60_orthoskim_orthoskimclean_N80.fasta -o locus_mito_COI_barcode_align_trimal_N60_orthoskim_orthoskimclean_N80.phylip

iqtree2 -s locus_mito_COI_barcode_align_trimal_N60_orthoskim_orthoskimclean_N80.phylip -nt 2 -m MFP -B 1000 -bnni -alrt 1000 -nt 2 -safe --prefix CO1_barcode_output --redo-tree

### Ribosomal DNA

for j in Genome_ref1 Genome_ref2
    do

    mkdir ${j}
    cd ${j}

    grep ${j} ../list_sample_mapping | cut -d" " -f1 > temp
    grep  ${j} ../list_sample_mapping_outgroups_updated | cut -d" " -f1 >> temp

    for i in $(cat temp)
        do
        ln -s ../${i}*.fasta .
        done

    cat *_rDNA_scaffold_clean.fasta > rDNA_${j}.fasta
    
    cd ..
    done


# Align the sequences
mafft  --auto --reorder --adjustdirection rDNA_${j}.fasta > rDNA_${j}_align.fasta

#Homogenise mising values
sed -e '/^>/!s/N/-/g' -e '/^>/!s/n/-/g' -e '/^>/!s/?/-/g' rDNA_${j}_align.fasta > temp_trim.fasta
#Clean
trimal -in temp_trim.fasta -out temp_trim2.fasta  -noallgaps  
trimal -in temp_trim2.fasta -out rDNA_${j}_align_trimal.fasta -gt 0.6 -gw 5 # gt:  1 - (fraction of sequences with a gap allowed) gw: Window size only applies to statistics/methods based on Gaps.
rm temp_trim*


#Cut rDNA into smaller regions allowing cleaning of badly aligned regions
length=$(seqkit stats rDNA_${j}_align_trimal.fasta | awk '{print $6}' | tail -n+2 | sed -e 's/,//')
num=$(echo ${length}"/200" | bc)
grep ">" rDNA_${j}_align_trimal.fasta | sed -e 's/>//' > temp_list_loci

for i in $(seq 0 $num)
    do

    start=$(($(( ${i} * 200 )) + 1))
    end=$(($(( ${i} * 200 )) + 200))

    cat temp_list_loci | awk '{print $0"\t"'"${start}"'"\t"'"${end}"'}' > temp.bed
    bedtools getfasta -fi rDNA_${j}_align_trimal.fasta -bed temp.bed > temp.fasta
    paste <(grep ">" temp.fasta) <(grep ">" temp.fasta) | cut -d":" -f1,2 > temp_corresp
    corresp_fab.pl temp_corresp temp.fasta > rDNA_${j}_align_trimal_slice${i}.fasta    

    done


# Paralog cleaning with Orthoskim

for i in $(grep ">" *slice* | cut -d">" -f2 | cut -d"-" -f2,3 | sort -u)
    do
    echo $(grep ">" *slice* | cut -d":" -f2 | grep ${i} | sort -u | head -n1) $(grep ${i} corresp_samplesnames_orthoskim | sort -u | head -n1 | cut -f2 -d" " ) >> corresp_samplesnames_orthoskim_ribo
    done

#Give the compatible name for Orthoskim
for i in $(ls *slice*.fasta)
    do 
    locus=$(echo ${i} | sed -e 's/.fasta//g')
    grep -Ff <(grep ">" ${i} | cut -d">" -f2) corresp_samplesnames_orthoskim_ribo > temp_corresp
    corresp_fab.pl temp_corresp ${i} > ${locus}_orthoskim.fasta
    done

mkdir align
PWD_BASE=${PWD}
cd align
mv ../*orthoskim.fasta .
cd ${PWD_BASE}

python3.5 ORTHOSKIM-v.1.6/src/FilterParalog.py \
    -i ${PWD}/align \
    -o ${PWD}/out_genus \
    -e fasta -q genus -w 100 -p 10

#Come bask to my name from compatible name for Orthoskim
for i in $(ls ${PWD}/out_genus)
    do 
    locus=$(echo ${i} | sed -e 's/.fa//g')
    grep -Ff <(grep ">" ${PWD}/out_genus/${i} | cut -d">" -f2) corresp_samplesnames_orthoskim  | awk '{print $2"\t"$1}' > temp_corresp
    corresp_fab.pl temp_corresp ${PWD}/out_genus/${i} > ${locus}_orthoskimclean.fasta
    done

#Join the slices again
AMAS.py concat -i *slice*_orthoskim_orthoskimclean.fasta -f fasta -d dna -t rDNA_${j}_align_trimal_orthoskim_orthoskimclean.fasta

#Homogenise mising values
sed -e '/^>/!s/N/-/g' -e '/^>/!s/n/-/g' -e '/^>/!s/?/-/g' rDNA_${j}_align_trimal_orthoskim_orthoskimclean.fasta > temp_trim.fasta

#Clean
trimal -in temp_trim.fasta -out temp_trim2.fasta  -noallgaps  
trimal -in temp_trim2.fasta -out rDNA_${j}_align_trimal_orthoskim_orthoskimclean_trimal.fasta -gt 0.6 -gw 5 # gt:  1 - (fraction of sequences with a gap allowed) gw: Window size only applies to statistics/methods based on Gaps.
rm temp_trim*

#Remove sequences with more than 40% of N
for i in rDNA_${j}_align_trimal_orthoskim_orthoskimclean_trimal.fasta
    do
    name=$(echo ${i} | sed -e 's/.fasta//g')
    seqtk comp ${i} | awk '{print $1"\t"$9/$2}' | awk '{if ($2 < 0.4) print $1}' > temp_list_keep
    fastaselect.pl ${i} temp_list_keep > ${name}_N60.fasta
    #rm temp_list_keep
    done

##Launch phylogeny
perl /home/ines/bin/fasta2relaxedPhylip.pl -f rDNA_${j}_align_trimal_orthoskim_orthoskimclean_trimal_N60.fasta -o rDNA_${j}_align_trimal_orthoskim_orthoskimclean_trimal_N60.phylip

iqtree2 -s rDNA_${j}_align_trimal_orthoskim_orthoskimclean_trimal_N60.phylip -m MFP -B 1000 -bnni -alrt 1000 -nt 2 -safe --prefix rDNA_output2 --redo-tree
